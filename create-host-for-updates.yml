---
  - hosts: localhost
    connection: local
    gather_facts: false
    user: root
    pre_tasks:
      - include_vars: vars/app.yml

    tasks:
      ###
      ### find the current AMI so we can launch an instance and look for updates
      - name: Find an existing 'current' ami
        local_action:
          module: ec2_ami_find
          region: "{{ aws_region }}"
          owner: self
          ami_tags:
            deployment-state: current
        register: ami_current

      - include: playbooks/create-vpc.yml
      - include: playbooks/instance-sg.yml
      - include: playbooks/app-subnet.yml

      - debug: msg="Current = {{ ami_current }}"
      - name: Provision ec2 box
        local_action:
          module: ec2
          key_name: "{{ aws_keypair }}"
          group_id: "{{ ec2_sg.group_id }}"
          instance_type: "{{ ec2_instance_type }}"
          image: "{{ ami_current.results[0].ami_id }}"
          vpc_subnet_id: "{{ [ app_subnet1.subnet.id, app_subnet2.subnet.id ]|random }}"
          region: "{{ aws_region }}"
          instance_tags: '{"Project":"{{aws_tag_Project}}","Role":"App","Use":"{{aws_service_level}}","ResponsibleParty":"{{aws_tag_ResponsibleParty}}"{{ tag_hash_values }}}'
          assign_public_ip: yes
          wait: true
          count: 1
          volumes:
          - device_name: /dev/sda1
            device_type: gp2
            volume_size: "{{ ec2_volume_size }}"
            delete_on_termination: true
        register: test_updates_hosts

      - name: Wait for the instance to boot by checking ssh
        wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=600 state=started
        with_items: test_updates_hosts.instances

